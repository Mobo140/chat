name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
        - name: Set up Git to use token for private modules access
          run: |
              git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com".insteadOf "https://github.com"

        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version: '1.23'
            cache-dependency-path: go.sum

        - name: Build
          run: go build -o ./bin/ -v ./...

        - name: Test
          run: go test -v ./...

  linter:
      name: lint
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Set up Git to use token for private modules access
          run: |
              git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com".insteadOf "https://github.com"

        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version: '1.23'
            cache: false

        - name: Configure Go environment for private modules
          run: |
            echo "export GOPRIVATE=github.com/Mobo140" >> $GITHUB_ENV
            echo "export GONOSUMDB=github.com/Mobo140" >> $GITHUB_ENV
            echo "export GIT_TERMINAL_PROMPT=0" >> $GITHUB_ENV

        - name: golangci-lint
          uses: golangci/golangci-lint-action@v6
          with:
            version: v1.61
            args: --timeout=30m --config=./.golangci.pipeline.yaml


        # Optional: working directory, useful for monorepos
        # working-directory: somedir

        # Optional: golangci-lint command line arguments.
        #
        # Note: By default, the `.golangci.yml` file should be at the root of the repository.
        # The location of the configuration file can be changed by using `--config=`

        # Optional: show only new issues if it's a pull request. The default value is `false`.
        # only-new-issues: true

        # Optional: if set to true, then all caching functionality will be completely disabled,
        #           takes precedence over all other caching options.
        # skip-cache: true

        # Optional: if set to true, then the action won't cache or restore ~/go/pkg.
        # skip-pkg-cache: true

        # Optional: if set to true, then the action won't cache or restore ~/.cache/go-build.
        # skip-build-cache: true

        # Optional: The mode to install golangci-lint. It can be 'binary' or 'goinstall'.
        # install-mode: "goinstall"
